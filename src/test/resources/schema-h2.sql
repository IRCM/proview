CREATE TABLE IF NOT EXISTS laboratory (
  id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  name varchar(255) NOT NULL,
  director varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
);
CREATE TABLE IF NOT EXISTS address (
  id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  line varchar(200) NOT NULL,
  town varchar(50) NOT NULL,
  state varchar(50) NOT NULL,
  country varchar(50) NOT NULL,
  postalcode varchar(50) NOT NULL,
  PRIMARY KEY (id)
);
CREATE TABLE IF NOT EXISTS users (
  id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  email varchar(255) NOT NULL,
  name varchar(255) NOT NULL,
  hashedpassword varchar(255) DEFAULT NULL,
  salt varchar(255) DEFAULT NULL,
  passwordversion int DEFAULT NULL,
  signattempts int DEFAULT NULL,
  lastsignattempt timestamp DEFAULT NULL,
  locale varchar(50) DEFAULT NULL,
  address_id bigint DEFAULT NULL,
  active boolean NOT NULL DEFAULT '0',
  admin boolean NOT NULL DEFAULT '0',
  manager boolean NOT NULL DEFAULT '0',
  registertime timestamp NOT NULL,
  laboratory_id bigint NOT NULL,
  PRIMARY KEY (id),
  UNIQUE (email),
  CONSTRAINT userLaboratory_ibfk FOREIGN KEY (laboratory_id) REFERENCES laboratory (id) ON UPDATE CASCADE,
  CONSTRAINT user_ibfk_1 FOREIGN KEY (address_id) REFERENCES address (id) ON UPDATE CASCADE
);
CREATE TABLE IF NOT EXISTS phonenumber (
  id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  phonenumbers_id bigint DEFAULT NULL,
  type varchar(255) NOT NULL,
  number varchar(50) NOT NULL,
  extension varchar(20) DEFAULT NULL,
  PRIMARY KEY (id),
  CONSTRAINT phonenumber_user_ibfk FOREIGN KEY (phonenumbers_id) REFERENCES users (id) ON DELETE CASCADE ON UPDATE CASCADE
);
CREATE TABLE IF NOT EXISTS forgotpassword (
  id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  user_id bigint NOT NULL,
  requestmoment timestamp NOT NULL,
  confirmnumber varchar NOT NULL,
  used boolean NOT NULL DEFAULT '0',
  PRIMARY KEY (id),
  CONSTRAINT forgotpassword_user_ibfk FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE ON UPDATE CASCADE
);
CREATE TABLE IF NOT EXISTS submission (
  id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  service varchar(50) DEFAULT NULL,
  experiment varchar(100) NOT NULL,
  goal varchar(150) DEFAULT NULL,
  taxonomy varchar(100) DEFAULT NULL,
  instrument varchar(100) DEFAULT NULL,
  source varchar(100) DEFAULT NULL,
  injectiontype varchar(50) DEFAULT NULL,
  digestion varchar(50) DEFAULT NULL,
  useddigestion varchar(100) DEFAULT NULL,
  otherdigestion varchar(100) DEFAULT NULL,
  identification varchar(50) DEFAULT NULL,
  identificationlink varchar(255) DEFAULT NULL,
  highresolution boolean NOT NULL DEFAULT '0',
  proteincontent varchar(50) DEFAULT NULL,
  protein varchar(100) DEFAULT NULL,
  posttranslationmodification varchar(150) DEFAULT NULL,
  separation varchar(50) DEFAULT NULL,
  thickness varchar(50) DEFAULT NULL,
  coloration varchar(50) DEFAULT NULL,
  othercoloration varchar(100) DEFAULT NULL,
  developmenttime varchar(100) DEFAULT NULL,
  decoloration boolean NOT NULL DEFAULT '0',
  weightmarkerquantity double DEFAULT NULL,
  proteinquantity varchar(100) DEFAULT NULL,
  formula varchar(50) DEFAULT NULL,
  monoisotopicmass double DEFAULT NULL,
  averagemass double DEFAULT NULL,
  solutionsolvent varchar(100) DEFAULT NULL,
  othersolvent varchar(100) DEFAULT NULL,
  toxicity varchar(100) DEFAULT NULL,
  lightsensitive boolean NOT NULL DEFAULT '0',
  storagetemperature varchar(50) DEFAULT NULL,
  quantification varchar(50) DEFAULT NULL,
  quantificationcomment clob DEFAULT NULL,
  contaminants clob,
  standards clob,
  comment clob,
  submissiondate timestamp NOT NULL,
  sampledeliverydate date DEFAULT NULL,
  digestiondate date DEFAULT NULL,
  analysisdate date DEFAULT NULL,
  dataavailabledate date DEFAULT NULL,
  version int DEFAULT 0,
  laboratory_id bigint NOT NULL,
  user_id bigint DEFAULT NULL,
  hidden boolean NOT NULL DEFAULT '0',
  PRIMARY KEY (id),
  CONSTRAINT submission_laboratory_ibfk FOREIGN KEY (laboratory_id) REFERENCES laboratory (id) ON UPDATE CASCADE,
  CONSTRAINT submission_user_ibfk FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE SET NULL ON UPDATE CASCADE
);
CREATE TABLE IF NOT EXISTS submissionfiles (
  id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  files_id bigint DEFAULT NULL,
  filename varchar(255) NOT NULL,
  content blob,
  PRIMARY KEY (id),
  CONSTRAINT submissionfiles_ibfk_1 FOREIGN KEY (files_id) REFERENCES submission (id) ON DELETE CASCADE ON UPDATE CASCADE
);
CREATE TABLE IF NOT EXISTS plate (
  id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  name varchar(100) NOT NULL,
  columncount int NOT NULL,
  rowcount int NOT NULL,
  submission_id bigint DEFAULT NULL,
  inserttime timestamp NOT NULL,
  PRIMARY KEY (id),
  CONSTRAINT plateSubmission_ibfk_1 FOREIGN KEY (submission_id) REFERENCES submission (id) ON DELETE CASCADE ON UPDATE CASCADE
);
CREATE INDEX IF NOT EXISTS plateName ON plate (name);
CREATE TABLE IF NOT EXISTS samplecontainer (
  id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  type varchar(50) NOT NULL,
  name varchar(100) DEFAULT NULL,
  plate_id bigint DEFAULT NULL,
  wellcolumn int DEFAULT NULL,
  wellrow int DEFAULT NULL,
  sample_id bigint DEFAULT NULL,
  version int DEFAULT 0,
  timestamp timestamp NOT NULL,
  banned boolean NOT NULL DEFAULT '0',
  PRIMARY KEY (id),
  UNIQUE (plate_id,wellcolumn,wellrow),
  CONSTRAINT samplecontainer_ibfk_1 FOREIGN KEY (plate_id) REFERENCES plate (id) ON DELETE CASCADE ON UPDATE CASCADE
);
CREATE INDEX IF NOT EXISTS samplecontainerName ON samplecontainer (name);
CREATE TABLE IF NOT EXISTS sample (
  id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  name varchar(150) DEFAULT NULL,
  controltype varchar(50) DEFAULT NULL,
  type varchar(50) DEFAULT NULL,
  originalcontainer_id bigint DEFAULT NULL,
  status int DEFAULT NULL,
  numberprotein int DEFAULT NULL,
  submission_id bigint DEFAULT NULL,
  listindex int DEFAULT NULL,
  molecularweight double DEFAULT NULL,
  quantity varchar(100) DEFAULT NULL,
  volume varchar(100) DEFAULT NULL,
  category varchar(50) DEFAULT NULL,
  version int DEFAULT 0,
  PRIMARY KEY (id),
  CONSTRAINT sample_ibfk_1 FOREIGN KEY (submission_id) REFERENCES submission (id) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT sample_ibfk_2 FOREIGN KEY (originalcontainer_id) REFERENCES samplecontainer (id) ON DELETE CASCADE ON UPDATE CASCADE
);
CREATE INDEX IF NOT EXISTS sampleName ON sample (name);
ALTER TABLE samplecontainer
ADD CONSTRAINT IF NOT EXISTS samplecontainer_ibfk_2 FOREIGN KEY (sample_id) REFERENCES sample (id) ON DELETE SET NULL ON UPDATE CASCADE;
CREATE TABLE IF NOT EXISTS standard (
  id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  name varchar(100) DEFAULT NULL,
  quantity varchar(100) DEFAULT NULL,
  standards_id bigint DEFAULT NULL,
  comment clob,
  deleted boolean NOT NULL DEFAULT '0',
  PRIMARY KEY (id),
  CONSTRAINT standard_ibfk_1 FOREIGN KEY (standards_id) REFERENCES sample (id) ON DELETE CASCADE ON UPDATE CASCADE
);
CREATE TABLE IF NOT EXISTS solvent (
  id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  submission_id bigint DEFAULT NULL,
  solvents varchar(150) NOT NULL,
  PRIMARY KEY (id),
  CONSTRAINT solvent_ibfk_1 FOREIGN KEY (submission_id) REFERENCES submission (id) ON DELETE CASCADE ON UPDATE CASCADE
);
CREATE TABLE IF NOT EXISTS protocol (
  id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  name varchar(100) DEFAULT NULL,
  type varchar(50) NOT NULL,
  PRIMARY KEY (id),
  UNIQUE (name)
);
CREATE TABLE IF NOT EXISTS treatment (
  id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  type varchar(100) DEFAULT NULL,
  protocol_id bigint DEFAULT NULL,
  fractionationtype varchar(50) DEFAULT NULL,
  user_id bigint DEFAULT NULL,
  inserttime timestamp NOT NULL,
  deleted boolean NOT NULL DEFAULT '0',
  deletiontype varchar(50) DEFAULT NULL,
  deletionexplanation clob,
  PRIMARY KEY (id),
  CONSTRAINT treatment_protocol_ibfk FOREIGN KEY (protocol_id) REFERENCES protocol (id) ON UPDATE CASCADE,
  CONSTRAINT treatment_user_ibfk FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE SET NULL ON UPDATE CASCADE
);
CREATE TABLE IF NOT EXISTS treatedsample (
  id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  treatment_id bigint DEFAULT NULL,
  sample_id bigint NOT NULL,
  container_id bigint DEFAULT NULL,
  listindex int DEFAULT NULL,
  destinationcontainer_id bigint DEFAULT NULL,
  comment clob,
  sourcevolume double DEFAULT NULL,
  solvent varchar(255) DEFAULT NULL,
  solventvolume double DEFAULT NULL,
  name varchar(100) DEFAULT NULL,
  quantity varchar(100) DEFAULT NULL,
  position int DEFAULT NULL,
  number int DEFAULT NULL,
  piinterval varchar(50) DEFAULT NULL,
  PRIMARY KEY (id),
  CONSTRAINT treatedsample_ibfk_1 FOREIGN KEY (treatment_id) REFERENCES treatment (id) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT treatedsample_ibfk_2 FOREIGN KEY (sample_id) REFERENCES sample (id) ON UPDATE CASCADE,
  CONSTRAINT treatedsample_ibfk_3 FOREIGN KEY (container_id) REFERENCES samplecontainer (id) ON UPDATE CASCADE,
  CONSTRAINT treatedsample_ibfk_4 FOREIGN KEY (destinationcontainer_id) REFERENCES samplecontainer (id) ON UPDATE CASCADE
);
CREATE TABLE IF NOT EXISTS msanalysis (
  id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  source varchar(100) DEFAULT NULL,
  massdetectioninstrument varchar(100) NOT NULL,
  inserttime timestamp NOT NULL,
  deleted boolean NOT NULL DEFAULT '0',
  deletiontype varchar(50) DEFAULT NULL,
  deletionexplanation clob,
  PRIMARY KEY (id)
);
CREATE TABLE IF NOT EXISTS acquisition (
  id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  msanalysis_id bigint DEFAULT NULL,
  sample_id bigint NOT NULL,
  container_id bigint DEFAULT NULL,
  numberofacquisition int DEFAULT NULL,
  samplelistname varchar(255) DEFAULT NULL,
  acquisitionfile varchar(255) DEFAULT NULL,
  position int NOT NULL,
  listindex int DEFAULT NULL,
  comment varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (sample_id,position),
  CONSTRAINT acquisition_ibfk_1 FOREIGN KEY (msanalysis_id) REFERENCES msanalysis (id) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT acquisition_ibfk_2 FOREIGN KEY (sample_id) REFERENCES sample (id) ON UPDATE CASCADE,
  CONSTRAINT acquisition_ibfk_3 FOREIGN KEY (container_id) REFERENCES samplecontainer (id) ON UPDATE CASCADE
);
CREATE INDEX IF NOT EXISTS acquisitionFile ON acquisition (acquisitionfile,sample_id);
CREATE TABLE IF NOT EXISTS dataanalysis (
  id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  sample_id bigint NOT NULL,
  protein varchar(255) NOT NULL,
  peptide varchar(255) DEFAULT NULL,
  maxworktime double NOT NULL,
  score clob,
  worktime double DEFAULT NULL,
  status varchar(50) NOT NULL,
  type varchar(50) NOT NULL,
  PRIMARY KEY (id),
  CONSTRAINT dataanalysis_ibfk_1 FOREIGN KEY (sample_id) REFERENCES sample (id) ON DELETE CASCADE ON UPDATE CASCADE
);
CREATE TABLE IF NOT EXISTS activity (
  id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  user_id bigint NOT NULL,
  tablename varchar(50) NOT NULL,
  recordid bigint NOT NULL,
  actiontype varchar(50) NOT NULL,
  timestamp timestamp NOT NULL,
  explanation clob,
  PRIMARY KEY (id)
);
CREATE INDEX IF NOT EXISTS activityRecordIndex ON activity (tablename,recordid,actiontype);
CREATE TABLE IF NOT EXISTS activityupdate (
  id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  updates_id bigint DEFAULT NULL,
  tablename varchar(50) NOT NULL,
  recordid bigint NOT NULL,
  actiontype varchar(50) NOT NULL,
  actioncolumn varchar(70) DEFAULT NULL,
  oldvalue varchar(255) DEFAULT NULL,
  newvalue varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  CONSTRAINT activityupdate_ibfk_1 FOREIGN KEY (updates_id) REFERENCES activity (id) ON DELETE CASCADE ON UPDATE CASCADE
);
CREATE TABLE IF NOT EXISTS preference (
  id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  referer varchar(255) NOT NULL,
  name varchar(255) NOT NULL,
  PRIMARY KEY (id),
  UNIQUE (referer, name)
);
CREATE INDEX IF NOT EXISTS preferenceName ON preference (name);
CREATE TABLE IF NOT EXISTS userpreference (
  id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  preference_id bigint NOT NULL,
  user_id bigint NOT NULL,
  content blob DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (preference_id, user_id),
  CONSTRAINT userpreference_preference_ibfk FOREIGN KEY (preference_id) REFERENCES preference (id) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT userpreference_user_ibfk FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE ON UPDATE CASCADE
);
